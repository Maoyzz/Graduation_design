package myz.graduation_design.httpservice;import android.util.Log;import java.io.IOException;import java.util.HashMap;import java.util.Map;import okhttp3.Interceptor;import okhttp3.Request;import okhttp3.Response;/** * Created by HP on 2017/11/7. */public class HttpCommonInterceptor implements Interceptor {    private Map<String,String> mHeaderParamsMap = new HashMap<>();    public HttpCommonInterceptor() {    }    @Override    public Response intercept(Chain chain) throws IOException {        Log.d("HttpCommonInterceptor","add common params");        Request oldRequest = chain.request();//        // 添加新的参数，添加到url 中//        HttpUrl.Builder authorizedUrlBuilder = oldRequest.url().newBuilder()//         .scheme(oldRequest.url().scheme())//             .host(oldRequest.url().host());////        // 新的请求//        Request.Builder requestBuilder =  oldRequest.newBuilder();//        requestBuilder.method(oldRequest.method(),//                oldRequest.body());////        //Add new SessionKey//        String sessionKey = SharedPreferenceUtils.getString(QiyunApplication.getInstance(), SharedPreferenceUtils.SESSION_KEY, "");//        if (sessionKey != null && !"".equals(sessionKey)){//            requestBuilder.url(authorizedUrlBuilder.addEncodedQueryParameter("SessionKey",sessionKey).build());//        }////        //添加公共参数,添加到header中////        if(mHeaderParamsMap.size() > 0){////            for(Map.Entry<String,String> params:mHeaderParamsMap.entrySet()){////                //requestBuilder.header(params.getKey(),params.getValue());////                requestBuilder.url(authorizedUrlBuilder.addEncodedQueryParameter(params.getKey(),params.getValue()).build());////            }////        }////        Request newRequest = requestBuilder.build();//        /*//        FormBody body = (FormBody) newRequest.body();//        for (int i = 0; i < body.size(); i++){//            Log.e("lyt", "newRequest: " + body.encodedName(i) + body.encodedValue(i) + "value null:" + (body.encodedValue(i) == null));//        }//        *///        //RequestBody body = newRequest.body();////        //Log.e("lyt", "newRequest: " + newRequest.url().toString() + newRequest.body().toString());//        //add SessionKey in Url        //TODO SessionKey        //Request newRequest = addSessionKey(oldRequest);        return chain.proceed(oldRequest);    }    public static class Builder{        HttpCommonInterceptor mHttpCommonInterceptor;        public Builder(){            mHttpCommonInterceptor = new HttpCommonInterceptor();        }        public Builder addHeaderParams(String key, String value){            mHttpCommonInterceptor.mHeaderParamsMap.put(key,value);            return this;        }        public Builder  addHeaderParams(String key, int value){            return addHeaderParams(key, String.valueOf(value));        }        public Builder  addHeaderParams(String key, float value){            return addHeaderParams(key, String.valueOf(value));        }        public Builder  addHeaderParams(String key, long value){            return addHeaderParams(key, String.valueOf(value));        }        public Builder  addHeaderParams(String key, double value){            return addHeaderParams(key, String.valueOf(value));        }        public HttpCommonInterceptor build(){            return mHttpCommonInterceptor;        }    }}